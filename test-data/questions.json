[
  {

    "image": "null",
    "question": "Which of the following is a valid property in a hibernate configuration?",
    "correctIndex": 4,
    "options":["hibernate.dialect","hibernate.connection.url","show_sql", "All of the above"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "<p>How are Associations between Hibernate entities realized in Database?</p>",
    "correctIndex": 4,
    "options":["<p>join queries</p>","<p>foreign keys</p>", "<p>constraints</p>", "<p>All of the Above</p>"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "<p>What is the example of one-to-one relation?</p>",
    "correctIndex": 3,
    "options":[ "Book - Author", "Series - Book","Book - BookInfo",  "Author - Publisher"],
  "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "<p>Why is cascade relationship applied between entities Book and Publication?</p>",
    "correctIndex": "Publication is deleted",
    "options":["saved", " when Book is deleted", " saved respectively.","Publication is retrieved when Book is retrieved."],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "<p>Book has _mandatory_ association an Author. Meaning Book must have author.</p><p>Which hibernate option is used to specify this?</p>",
    "correctIndex": 1,
    "options":[ "not-null","lazy-load", "cascade", "None of the Above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Following if the right convention of hibernate mapping file",
    "correctIndex": 2,
    "options":["hbm.<entity>.xml", "<entity>.hbm.xml", "hbm.<entity>.xls", "<entity>.hbm.xls"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Primary key is defined in mapping file using:",
    "correctIndex": 3,
    "options":["generator", "primary", "id","none of these"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Non Nullable columns are defined in mapping file using following attribute",
    "correctIndex": 3,
    "options":[ "null","no-null","not-null","nullable"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "generator type is specified using folloiwng attrbute of generator tag",
    "correctIndex": 2,
    "options":[ "generator","class","type","category"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "While creating SessionFactory in hibernate",
    "correctIndex": " which design pattern should be adopted?",
    "options":[ "Singleton","Singleton","Prototype",""],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which property is used to configure diver class in hibernate?",
    "correctIndex": 1,
    "options":[ "hibernate.connection.driver_class",
     "hibernate.connection.datasource",
     "hibernate.connection.driver",
     "None of the above"],
  "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "If an entity (a class annotated with @Entity) is not annotated with @Table",
    "correctIndex": " what will happen?",
    "options":[ "No error and class name is mapped with table name",
     "Throws error because no table name is assigned",
     "No error and class name is mapped with table name",
     "Hibernate ignores the class"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Choose the correct statement",
    "correctIndex": 3,
    "options":[ "Hibernate is an ORM library for java language",
     "Hibernate provides a mapping for object-oriented domain model to a traditional relational database",
     "Both 1 & 2",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "HQL is used in",
    "correctIndex": 1,
    "options":[ "session.createQuery()",
     "session.createCriteria()",
     "session.createHQL()",
     "session.createSQLQuery()"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What does hibernate.show_sql=true mean?",
    "correctIndex": 2,
    "options":[ "show sql parameters on console",
     "show sql statements on console",
     "do not show sql statements",
     "none of the above"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "What does session.load() return if there is no matching database row?",
    "correctIndex": 3,
    "options":[ "NULL",
     "Empty object",
     "Throws an exception",
     "None of the above"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What happens when both hibernate.properties and hibernate.cfg.xml are in the classpath?",
    "correctIndex": 2,
    "options":[ "The settings of properties file will override the settings used in the XML configuration",
     "The settings of XML configuration file will override the settings used in the properties",
     "Duplicate configuration exception",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What role does Session interface play in Hibernate?",
    "correctIndex": "1",
    "options":[ "2",
     "3",
     "Wraps a JDBC connection",
     "Factory for Transaction"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "Hibernate is compliant with",
    "correctIndex": 2,
    "options":[ "JMS",
     "JPA",
     "JMX",
     "JSP"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "What is the tool used to generate classes from hibernate configuration files",
    "correctIndex": 3,
    "options":[ "hbm2ddl",
     "maven",
     "hbm2java",
     "ANT"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernate supports following databases",
    "correctIndex": 4,
    "options":[ "MySQL",
     "Oracle",
     "SQL server",
     "All of the above"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernate mappings can be specified in following ways",
    "correctIndex": 3,
    "options":[ "XML file",
     "Annotation",
     "Annotations or XML",
     "None of these"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernates maps POJOs to",
    "correctIndex": 1,
    "options":[ "tables",
     "columns",
     "Class fields",
     "Objects"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What does a hibernate mapping file contain?",
    "correctIndex": 4,
    "options":[ "Class to table mapping",
     "Primary Key mapping",
     "Each field to column mapping",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the following annotations is not a valid hibernate annotation?",
    "correctIndex": 3,
    "options":[ "@Table",
     "@Column",
     "@HibernateColumn",
     "@Id"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which driver is efficient and always preferable for using JDBC applications?",
    "correctIndex": 1,
    "options":[ "Type 4",
     "Type 3",
     "Type 2",
     "Type 1"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which driver is called as thin-driver in JDBC?",
    "correctIndex": 4,
    "options":[ "Type 1",
     "Type 2",
     "Type 3",
     "Type 4"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which is the pure Java driver?",
    "correctIndex": 4,
    "options":[ "Type 1",
     "Type 2",
     "Type 3",
     "Type 4"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which driver uses ODBC under the hood?",
    "correctIndex": 1,
    "options":[ "Type 1",
     "Type 2",
     "Type 3",
     "Type 4"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "If you are accessing one type of database",
    "correctIndex": " such as Oracle",
    "options":[ " Sybase",
     " or IBM",
     " what is the preferred driver type?",
     "Type 4"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the following is false as far as type 4 driver is concerned?",
    "correctIndex": 3,
    "options":[ "Type 4 driver is pure java driver",
     "Type 4 drivers are 100% Java compatible",
     "Type 4 drivers can not be used with Linux platform",
     "None of the above"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the disadvantage of Type-4  Driver?",
    "correctIndex": 2,
    "options":[ " a separate driver is needed for each database",
     "At client side",
     " a separate driver is needed for each database",
     "Type-4 driver is entirely written in Java"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the following steps should be avoided for every query to the database?",
    "correctIndex": 4,
    "options":[ "Create Query",
     "Open Connection",
     "Close Connection",
     "Both 2 & 3"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is a way to create a set of connections once for application and use them throughout the application?",
    "correctIndex": 2,
    "options":[ "Type 1 Driver",
     "Connection Pools",
     "ORM Tools",
     "None of the above"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the pre-requisite step before connecting to the database using JDBC?",
    "correctIndex": 3,
    "options":[ "Create Statement",
     "Create ODBC bridge",
     "Load the Driver",
     "All of the above"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which object is required to execute a query using JDBC?",
    "correctIndex": 1,
    "options":[ "Statement",
     "ResultSet",
     "ConnectionPool",
     "DriverConnection"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the class of object that contain the results of query executed using JDBC?",
    "correctIndex": 2,
    "options":[ "Statement",
     "ResultSet",
     "Connection",
     "None of the above"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "ORM eliminates the following",
    "correctIndex": 4,
    "options":[ "Connecting to the database",
     "Writing code to populate columns data into POJOs",
     "Writing try/catch blocks",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "In ORM - Table columns are mapped to:",
    "correctIndex": 2,
    "options":[ "Class methods",
     "Class fields",
     "Class itself",
     "None of the above"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "In ORM - A table is mapped to:",
    "correctIndex": 1,
    "options":[ "Class",
     "Object",
     "Class fields",
     "Class methods"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "In ORM - data row is mapped to",
    "correctIndex": 3,
    "options":[ "Class",
     "Load from external properties file",
     "Object",
     "None of these"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "ORM mappings are done in",
    "correctIndex": 2,
    "options":[ "Database table",
     "XML File",
     "Properties File",
     "Hashmap"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "ORM frameworks provide following capabilities",
    "correctIndex": 4,
    "options":[ "Mappings in configuration file",
     "Storage and retrieval of objects",
     "API to query data using objects",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernate provides mappings in following format",
    "correctIndex": 1,
    "options":[ "XML file",
     "Properties file",
     "Hashmap",
     "Database table"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernate API to query the database is called ",
    "correctIndex": 2,
    "options":[ "SQL",
     "HQL",
     "DBMS",
     "NoSQL"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "JPA stands for",
    "correctIndex": 3,
    "options":[ "Java Parser API",
     "Java Pragmatic API",
     "Java Persistence API",
     "Java Programmer API"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "JPA API to take object out of context of database connectivity",
    "correctIndex": 3,
    "options":[ "EntityManager.refresh()",
     "EntityManager.merge()",
     "EntityManager.detach()",
     "None of these"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the specification standard for all ORM tools?",
    "correctIndex": 3,
    "options":[ "JDBC",
     "JMS",
     "JPA",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the following is not an ORM tool?",
    "correctIndex": 2,
    "options":[ "Toplink",
     "JTA",
     "JDO",
     "Castor"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the following is a benefit of using ORM?",
    "correctIndex": "All of the above",
    "options":[ "Provides a simple query language for most of the operations",
     "Provides an API that reduces the code significantly",
     "Abstracts the underlying database",
     "Easy to manage complex models"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "ORM frameworks provide following capabilities",
    "correctIndex": 4,
    "options":[ "Mappings in configuration file",
     "Storage and retrieval of objects",
     "API to query data using objects",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernate provides mappings in following format",
    "correctIndex": 1,
    "options":[ "XML file",
     "Properties file",
     "Hashmap",
     "Database table"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernate API to query the database is called ",
    "correctIndex": 2,
    "options":[ "SQL",
     "HQL",
     "DBMS",
     "NoSQL"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "JPA stands for",
    "correctIndex": 3,
    "options":[ "Java Parser API",
     "Java Pragmatic API",
     "Java Persistence API",
     "Java Programmer API"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "JPA API to take object out of context of database connectivity",
    "correctIndex": 3,
    "options":[ "EntityManager.refresh()",
     "EntityManager.merge()",
     "EntityManager.detach()",
     "None of these"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What does JDBC DriverManager class do?",
    "correctIndex": 3,
    "options":["Manages a list of database drivers", "Matches connection requests from the java application with the proper database driver using communication subprotocol", "Both 1 and 2", "None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is a JDBC Driver?",
    "correctIndex": 2,
    "options":[ "Class to execute SQL queries in the database", "Interface enabling a Java application to interact with a database", "Class to call stored procedures in the database","None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the following methods are needed for loading a database driver in JDBC?",
    "correctIndex": 3,
    "options":[ "registerDriver() method",
     "Class.forName()",
     "Both A and B",
     "getConnection()"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which statement is static and synchronized in JDBC API?",
    "correctIndex": 3,
    "options":[ "executeQuery()",
     "executeUpdate()",
     "getConnection()",
     "prepareCall()"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the following statements is false as far as different type of statements is concerned in JDBC?",
    "correctIndex": 4,
    "options":[ "Statement",
     "PreparedStatement",
     "CallableStatement",
     "InterimStatement"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "All raw data types (including binary documents or images) should be read and uploaded to the database as an array of",
    "correctIndex": 1,
    "options":[ "byte",
     "int",
     "boolean",
     "char"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "JDBC facilitates to store the java objects by using which of the methods of PreparedStatement 1. setObject () 2. setBlob() 3. setClob()",
    "correctIndex": 3,
    "options":[ "2",
     "3",
     "1",
     "2"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which method is used to perform DML statements in JDBC?",
    "correctIndex": 3,
    "options":[ "execute()",
     "executeQuery()",
     "executeUpdate()",
     "executeResult()"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "When the message 'No Suitable Driver' occurs?",
    "correctIndex": "1 or 3",
    "options":[ "When failed to load the appropriate JDBC drivers",
     "When the user name",
     " password and the database does not match",
     "When the JDBC database URL passed is not constructed properly"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Are prepared statements actually compiled?",
    "correctIndex": 2,
    "options":[ " they are compiled",
     "Yes",
     " they are compiled",
     "No"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "<p>Which of the following is true about Lazy Loading option on Book inside Series:</p>",
    "correctIndex": "All of the above",
    "options":[ "Book child objects are not queried for",
     " when loading Series objects.",
     "Book child objects are loaded only Series.getBooks() api is called.",
     "Series.getBooks() if called should be under hibernate session."],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "<p>For one-to-many mapping",
    "correctIndex": " one should in general use 'set' instead of 'list'",
    "options":[ " because:</p>",
     "All of the above",
     "'list' enforces ordering in database query",
     " Ordering in database query is slower than otherwise."],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "<p>When is Lazy Loading a suitable option?</p>",
    "correctIndex": 1,
    "options":[ "When many use cases in business logic only needs parent object's attributes.",
     "When business logic needs children every time parent object is accessed.",
     "When the Parent has many such relations. Like User to Roles",
     " User to Settings etc."],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "<p>Let us take example of Shopping Site with Customer being one of the main entity. A Customer is typically is associated to a Sales Region (containing information like State and Country).</p><p>What is the association between Customer and Region in the Relational Model?</p>",
    "correctIndex": 3,
    "options":[ "one-to-one",
     "one-to-many",
     "many-to-one",
     "many-to-many"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "<p>A Purchase Order can refer to many Products (like smart phone",
    "correctIndex": " smart phone case",
    "options":[ " screen guard etc.)",
     " and a Product can be referred to by many Purchase Orders (because many Customers buy the same Product).</p><p>What is the association between Purchase Order and Product?</p>",
     "one-to-many",
     "one-to-one"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "<p>Every Customer has his/her own set of Purchase  Orders made.</p><p>What is the association between Customer and Purchase Order?</p>",
    "correctIndex": 2,
    "options":[ "one-to-one",
     "one-to-many",
     "many-to-one",
     "many-to-many"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What API in java can be used to load the required JDBC driver?",
    "correctIndex": 2,
    "options":[ "Java Collections",
     "Java Reflection",
     "Java IO",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the first step in fetching data using JDBC?",
    "correctIndex": 2,
    "options":[ "Open connection using Driver Manager",
     "Load database driver",
     "Fire Query",
     "Create statement"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the best place to write close opened database connection?",
    "correctIndex": 2,
    "options":[ "Before statement.executeQuery()",
     "Inside finally block",
     "Inside Resultset iteration",
     "Anywhere"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Best practice to handle connection parameters is",
    "correctIndex": 2,
    "options":[ "specify as String in DriverManager.getConnection() API call",
     "Load from external properties file",
     "Inside Try/Catch block",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Query is executed using following component",
    "correctIndex": 4,
    "options":[ "Class.forName()",
     "DriverManager",
     "Resultset",
     "Statement"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What are the common problems with using JDBC?",
    "correctIndex": 4,
    "options":[ "Excessive Repetition of Code",
     "Error Prone",
     "Brittle to Change",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What happens if you do not close database connections",
    "correctIndex": 3,
    "options":[ "Results in Null pointer exception",
     "Compilation errors",
     "Database connection exceptions at runtime",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is Impedance Mismatch?",
    "correctIndex": 2,
    "options":[ "Problems occurred because of not properly closing the database connections",
     "Difficulties that are encountered when a RDBMS system is used by an Object Oriented program",
     "Difficulties that are encountered because of invalid database connection parameters",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What are the common problems in Impedance Mismatch?",
    "correctIndex": "All of the above",
    "options":[ "Granularity",
     "Inheritance",
     "Associations",
     "Identity"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "What are the cons of using JDBC?",
    "correctIndex": 4,
    "options":[ "Causes Code bloating",
     " i.e. there is a large programming overhead",
     "Queries are DBMS specific",
     "Both 1 & 2"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which can be used to solve most of the problems with using JDBC?",
    "correctIndex": 3,
    "options":[ "NoSQL databases",
     "JDBC Type 1 Driver",
     "ORM Tools",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the below are benefits of Cloud Computing?",
    "correctIndex": 4,
    "options":[ "Shared Infrastructure",
     "Pay as you go",
     "Elastic Resource Cpacity",
     "All of above"],
  "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the below is not a service model or not offerred as a service using Cloud Computing?",
    "correctIndex": 3,
    "options":[ "IaaS",
     "PaaS",
     "MaaS",
     "SaaS"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of below is a IaaS offerring?",
    "correctIndex": 4,
    "options":[ "Microsoft Azure",
     "Amazon S3 Service",
     "Rackspace",
     "All of above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the below is an example of PaaS?",
    "correctIndex": 4,
    "options":[ "Yahoo weather Service",
     "Salesforce.com",
     "Google App Engine",
     "Both 2 and 3"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "Whic of the below is a example of SaaS?",
    "correctIndex": 4,
    "options":["Gmail","YouTube", "Dropbox", "All of above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the below services are offerred by Google App Engine?",
    "correctIndex": 3,
    "options":[ "Task Queue",
     "Memcache",
     "Both 1 and 2",
     "Only 2"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "GAE Level of Service ensures which of below?",
    "correctIndex": 3,
    "options":[ "Use of shared resources",
     "Overuse of shared resources",
     "Fair usage of shared resources",
     "None of above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "How Google App Engine ensures Fair Usage?",
    "correctIndex": 2,
    "options":[ "Pricing the app",
     "Limits and Quotas",
     "Free app",
     "None of Above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of below is not a characterstic of Cloud Computing?",
    "correctIndex": 4,
    "options":[ "Cost Optimization",
     "Management & Maintenance",
     "Scalability and elasticity",
     "All of above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of below are enforced to ensure apps can run smoothly and with integrity of the cloud?",
    "correctIndex": 4,
    "options":[ "Free Quota",
     "Billable Quota",
     "Safety Limits",
     "All of Above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Scalability is increasing of capacity of which of the below computing resources?",
    "correctIndex": 4,
    "options":[ "Memory",
     "Network bandwidth",
     "CPUs or the Processing units",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "How can you increase the system's capacity?",
    "correctIndex": 4,
    "options":[ "By adding more servers",
     "By removing servers to reduce race condition",
     "By replacing with a bigger server",
     "Both 1 and 3"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of below concerns addressed by Cloud Computing?",
    "correctIndex": 2,
    "options":[ "Managing of infrastructure",
     "IT Cost",
     "Scalability",
     "All of above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is horizontal scaling?",
    "correctIndex": 3,
    "options":[ "Replacing with a bigger server",
     "Replacing with a smaller server",
     "Adding more servers",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Replacing existing server of 2 CPU with Server having 4 CPU is a example for?",
    "correctIndex": 4,
    "options":[ "Scale Out",
     "Scale Down",
     "Scale In",
     "Scale Up"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Session is equivalent of the following in JDBC API",
    "correctIndex": 2,
    "options":[ "Database Driver",
     "Database connection",
     "Statement",
     "Resultset"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "if the POJO does not set primary key auto increment value",
    "correctIndex": " then hibernate does following",
    "options":[ "Sets the auto increment  value based on the mapping ",
     "Throws SQLException",
     "Inserts null value",
     "Sets the auto increment  value based on the mapping "],
    "topicId": "Throws NullPointerException"
  },
  {

    "image": "null",
    "question": "session.save() does the following:",
    "correctIndex": 4,
    "options":[ "Inserts new record into the database",
     "Updates the record in database",
     "Inserts or updates based on id",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the pre-requisite to build a SessionFactory",
    "correctIndex": 2,
    "options":[ "Start a transaction",
     "Load the hibernate configuration",
     "Create Database connection",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the following frameworks when used along with Hibernate can further reduce a lot of code",
    "correctIndex": " like opening and closing sessions and transactions? ",
    "options":[ "Spring",
     "JDBC",
     "TopLink",
     "Spring"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "In Hibernate",
    "correctIndex": " a HQL query is executed using the following component",
    "options":[ "Query",
     "Session",
     "Query",
     "SessionFactory"],
      "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the method in Hibernate that can be used to pass named parameters to a Query?",
    "correctIndex": 4,
    "options":[ "query.list()",
     "query.set()",
     "query.load()",
     "query.setParameter()"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Session is equivalent of the following in JDBC API",
    "correctIndex": 2,
    "options":[ "Database Driver",
     "Database connection",
     "Statement",
     "Resultset"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "if the POJO does not set primary key auto increment value",
    "correctIndex": " then hibernate does following",
    "options":[ "Sets the auto increment  value based on the mapping ",
     "Throws SQLException",
     "Inserts null value",
     "Sets the auto increment  value based on the mapping "],
      "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "session.save() does the following:",
    "correctIndex": 4,
    "options":[ "Inserts new record into the database",
     "Updates the record in database",
     "Inserts or updates based on id",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernate is compliant with",
    "correctIndex": 2,
    "options":[ "JMS",
     "JPA",
     "JMX",
     "JSP"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the tool used to generate classes from hibernate configuration files",
    "correctIndex": 3,
    "options":[ "hbm2ddl",
     "maven",
     "hbm2java",
     "ANT"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernate supports following databases",
    "correctIndex": 4,
    "options":[ "MySQL",
     "Oracle",
     "SQL server",
     "All of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernate mappings can be specified in following ways",
    "correctIndex": 3,
    "options":[ "XML file",
     "Annotation",
     "Annotations or XML",
     "None of these"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Hibernates maps POJOs to",
    "correctIndex": 1,
    "options":[ "tables",
     "columns",
     "Class fields",
     "Objects"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the first step in fetching data using JDBC?",
    "correctIndex": 2,
    "options":[ "Open connection using Driver Manager",
     "Load database driver",
     "Fire Query",
     "Create statement"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What happens if you do not close database connections",
    "correctIndex": 3,
    "options":[ "Results in Null pointer exception",
     "Compilation errors",
     "Database connection exceptions at runtime",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Best practice to handle connection parameters is",
    "correctIndex": 2,
    "options":[ "specify as String in DriverManager.getConnection() API call",
     "Load from external properties file",
     "Inside Try/Catch block",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Query is executed using following component",
    "correctIndex": 4,
    "options":[ "Class.forName()",
     "DriverManager",
     "Resultset",
     "Statement"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the first step in fetching data using JDBC?",
    "correctIndex": 2,
    "options":[ "Open connection using Driver Manager",
     "Load database driver",
     "Fire Query",
     "Create statement"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is the best place to write close opened database connection?",
    "correctIndex": 2,
    "options":[ "Before statement.executeQuery()",
     "Inside finally block",
     "Inside Resultset iteration",
     "Anywhere"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What happens if you do not close database connections",
    "correctIndex": 3,
    "options":[ "Results in Null pointer exception",
     "Compilation errors",
     "Database connection exceptions at runtime",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "Best practice to handle connection parameters is",
    "correctIndex": 2,
    "options":[ "specify as String in DriverManager.getConnection() API call",
     "Load from external properties file",
     "Inside Try/Catch block",
     "None of the above"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "Query is executed using following component",
    "correctIndex": 4,
    "options":[ "Class.forName()",
     "DriverManager",
     "Resultset",
     "Statement"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What was Apache Maven written in?",
    "correctIndex": 2,
    "options":[ "1: PHP",
     "2: Java (programming language)",
     "3: Python (programming language)",
     "4: Perl"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What is Apache Maven's current status?",
    "correctIndex": 2,
    "options":[ "1: Active service with various airlines and Air Forces",
     "2: Actively developed",
     "3: Active in new format",
     "4: Active"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "What license is Apache Maven distributed under?",
    "correctIndex": "4: Apache License 2.0",
    "options":[ "1: GNU General Public License version 2",
     "2: Based on Apache License 2.0",
     "3: Triple-license MPL",
     "GPL and LGPL"],
    "topicId": ["Reptiles"]
  },
  {

    "image": "null",
    "question": "Which of the following platforms does Apache Maven run on?",
    "correctIndex": 2,
    "options":[ "1: Mac OS X",
     "2: Cross-platform",
     "3: Windows",
     "4: Linux"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "Maven automates building the project and running the ________ associated with the project.",
    "correctIndex": 4,
    "options":[ "1: Mock object",
     "2: Test-driven development",
     "3: Software testing",
     "4: Unit testing"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "It is similar in functionality to the ________ tool  but is based on different concepts.",
    "correctIndex": 4,
    "options":[ "1: Apache Harmony",
     "2: Apache Tomcat",
     "3: Apache Maven",
     "4: Apache Ant"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "Maven projects are configured using a Project Object Model  which is stored in a pom.________-file.",
    "correctIndex": 3,
    "options":[ "1: Scalable Vector Graphics",
     "2: HTML",
     "3: XML",
     "4: XHTML"],
    "topicId": ["Reptiles"]
  },
  {
    "image": "null",
    "question": "Google Appengine is a __________ ?",
    "correctIndex": 2,
    "options":[ "1: SaaS",
     "2: PaaS",
     "3: IaaS",
     "4: MaaS"],
    "topicId": ["Reptiles"]
  }
]
